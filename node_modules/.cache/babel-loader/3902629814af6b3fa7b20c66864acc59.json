{"ast":null,"code":"import _slicedToArray from\"/Users/victoria/Documents/Adalab/Modulo-3/modulo-3-evaluacion-final-kvi-ki/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Switch,Route}from'react-router-dom';import'./App.scss';import CharacterList from'./CharacterList';import CharacterDetails from'./CharacterDetails';import Filter from'./Filter';import Header from'./Header';import getDataFromApi from'../services/getDataFromApi';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),characters=_useState2[0],setCharacters=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];useEffect(function(){getDataFromApi().then(function(data){return setCharacters(data);});},[]);var handleFilter=function handleFilter(searchField){if(searchField.key==='name')return setName(searchField.value);};var FilterCharacters=characters.filter(function(character){return character.name.toUpperCase().includes(name.toUpperCase());});var renderCharacterDetails=function renderCharacterDetails(props){var id=parseInt(props.match.params.id);var selectCharacter=characters.find(function(character){return character.id===id;});return/*#__PURE__*/_jsx(CharacterDetails,{character:selectCharacter});};return/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"main\",{className:\"main\",children:[/*#__PURE__*/_jsx(Filter,{handleFilter:handleFilter,name:name}),/*#__PURE__*/_jsx(CharacterList,{characters:FilterCharacters})]})]})}),/*#__PURE__*/_jsx(Route,{path:\"/character/:id\",render:renderCharacterDetails})]});}export default App;","map":{"version":3,"sources":["/Users/victoria/Documents/Adalab/Modulo-3/modulo-3-evaluacion-final-kvi-ki/src/components/App.js"],"names":["React","useState","useEffect","Switch","Route","CharacterList","CharacterDetails","Filter","Header","getDataFromApi","App","characters","setCharacters","name","setName","then","data","handleFilter","searchField","key","value","FilterCharacters","filter","character","toUpperCase","includes","renderCharacterDetails","props","id","parseInt","match","params","selectCharacter","find"],"mappings":"iMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,kBAA9B,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,eACuBT,QAAQ,CAAC,EAAD,CAD/B,wCACNU,UADM,eACMC,aADN,8BAEWX,QAAQ,CAAC,EAAD,CAFnB,yCAENY,IAFM,eAEAC,OAFA,eAIbZ,SAAS,CAAC,UAAM,CACdO,cAAc,GAAGM,IAAjB,CAAsB,SAAAC,IAAI,QACxBJ,CAAAA,aAAa,CAACI,IAAD,CADW,EAA1B,EAED,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,WAAD,CAAiB,CACpC,GAAIA,WAAW,CAACC,GAAZ,GAAoB,MAAxB,CACE,MAAOL,CAAAA,OAAO,CAACI,WAAW,CAACE,KAAb,CAAd,CACH,CAHD,CAKA,GAAMC,CAAAA,gBAAgB,CAAGV,UAAU,CAACW,MAAX,CAAkB,SAAAC,SAAS,CAAI,CACtD,MAAOA,CAAAA,SAAS,CAACV,IAAV,CAAeW,WAAf,GAA6BC,QAA7B,CAAsCZ,IAAI,CAACW,WAAL,EAAtC,CAAP,CACD,CAFwB,CAAzB,CAIA,GAAME,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAAC,KAAK,CAAI,CACtC,GAAMC,CAAAA,EAAE,CAAGC,QAAQ,CAACF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBH,EAApB,CAAnB,CACA,GAAMI,CAAAA,eAAe,CAAGrB,UAAU,CAACsB,IAAX,CAAgB,SAAAV,SAAS,CAAI,CACnD,MAAOA,CAAAA,SAAS,CAACK,EAAV,GAAiBA,EAAxB,CACD,CAFuB,CAAxB,CAGA,mBAAO,KAAC,gBAAD,EAAkB,SAAS,CAAEI,eAA7B,EAAP,CACD,CAND,CAQA,mBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,uBACE,aAAK,SAAS,CAAC,MAAf,wBACE,KAAC,MAAD,IADF,cAEE,cAAM,SAAS,CAAC,MAAhB,wBACE,KAAC,MAAD,EAAQ,YAAY,CAAEf,YAAtB,CAAoC,IAAI,CAAEJ,IAA1C,EADF,cAEE,KAAC,aAAD,EAAe,UAAU,CAAEQ,gBAA3B,EAFF,GAFF,GADF,EADF,cAUE,KAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,CAA6B,MAAM,CAAEK,sBAArC,EAVF,GADF,CAcD,CAED,cAAehB,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.scss';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport Filter from './Filter';\nimport Header from './Header';\nimport getDataFromApi from '../services/getDataFromApi';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    getDataFromApi().then(data =>\n      setCharacters(data));\n  }, []);\n\n  const handleFilter = (searchField) => {\n    if (searchField.key === 'name')\n      return setName(searchField.value);\n  }\n\n  const FilterCharacters = characters.filter(character => {\n    return character.name.toUpperCase().includes(name.toUpperCase())\n  })\n\n  const renderCharacterDetails = props => {\n    const id = parseInt(props.match.params.id);\n    const selectCharacter = characters.find(character => {\n      return character.id === id;\n    })\n    return <CharacterDetails character={selectCharacter} />\n  }\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <div className=\"page\">\n          <Header />\n          <main className=\"main\">\n            <Filter handleFilter={handleFilter} name={name} />\n            <CharacterList characters={FilterCharacters} />\n          </main>\n        </div>\n      </Route>\n      <Route path=\"/character/:id\" render={renderCharacterDetails} />\n    </Switch >\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}